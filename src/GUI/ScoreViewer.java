package GUI;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class ScoreViewer extends JFrame{

	// Creates a new JFrame that is accessible from the welcome screen, that contains high scores from past players and 
	// includes relevant game information such as the user name, date of play, dimensions of the board, timer speed, 
	// and a difficulty setting generated by the DifficultyAssessment class 
	
	private static final long serialVersionUID = 1L;
	
	// declare an instance of ScoreViewer to be accessible through the ScoreClicker class
	static ScoreViewer scoreViewer; 
	
	// establish empty lists for column headers and user scores, which are populated during the main method
	static List<String[]> scoreList = null; 
	static List<String> columnHeaders = null;
	
	// establish the logic for reading the saved scores from the CSV file into a text area to populate a JFrame
	
	public static void main (String [] args) throws IOException {
		
		// read the contents of the CSV into a string list for user viewing
		List<String[]> scoreList = new ArrayList<>();
		@SuppressWarnings("resource")
		BufferedReader br = new BufferedReader(new FileReader("game_score.csv"));
		String line = "";
		 while ((line = br.readLine()) != null) {

			 scoreList.add(line.split(","));
		}
		
		// add column headers to the empty string list
		List<String> columnHeaders = new ArrayList<String>();
		
		columnHeaders.add("User Name");
        columnHeaders.add("User Score");
        columnHeaders.add("Date");
        columnHeaders.add("Card Number");
        columnHeaders.add("Difficulty");
        columnHeaders.add("Multiplayer");
        
        // organize the scoreList string list into a user-friendly JTable
		TableModel tableModel = new DefaultTableModel(scoreList.toArray(new Object[][] {}), columnHeaders.toArray());
		scoreViewer = new ScoreViewer();
		JTable scoreTable = new JTable(tableModel);
		scoreViewer.add(new JScrollPane(scoreTable), BorderLayout.CENTER);
		scoreViewer.setSize(500, 500); 
		scoreViewer.setVisible(true); 
		}

		
	}
	

